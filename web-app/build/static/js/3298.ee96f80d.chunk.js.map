{"version":3,"file":"static/js/3298.ee96f80d.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport styled from \"styled-components\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  breakPoints,\n  BucketsIcon,\n  Checkbox,\n  Grid,\n  HelpTip,\n  ReportedUsageIcon,\n  TotalObjectsIcon,\n} from \"mds\";\nimport {\n  calculateBytes,\n  niceBytes,\n  prettyNumber,\n} from \"../../../../common/utils\";\nimport {\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { hasPermission } from \"../../../../common/SecureComponent\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { usageClarifyingContent } from \"screens/Console/Dashboard/BasicDashboard/ReportedUsage\";\n\nconst BucketItemMain = styled.div(({ theme }) => ({\n  border: `${get(theme, \"borderColor\", \"#eaeaea\")} 1px solid`,\n  borderRadius: 3,\n  padding: 15,\n  cursor: \"pointer\",\n  \"&.disabled\": {\n    backgroundColor: get(theme, \"signalColors.danger\", \"red\"),\n  },\n  \"&:hover\": {\n    backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  },\n  \"& .bucketTitle\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: 10,\n    \"& h1\": {\n      padding: 0,\n      margin: 0,\n      marginBottom: 5,\n      fontSize: 22,\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      [`@media (max-width: ${breakPoints.md}px)`]: {\n        marginBottom: 0,\n      },\n    },\n  },\n  \"& .bucketDetails\": {\n    display: \"flex\",\n    gap: 40,\n    \"& span\": {\n      fontSize: 14,\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      flexFlow: \"column-reverse\",\n      gap: 5,\n    },\n  },\n  \"& .bucketMetrics\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: 20,\n    gap: 25,\n    borderTop: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n    paddingTop: 20,\n    \"& svg.bucketIcon\": {\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      fill: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n    },\n    \"& .metric\": {\n      \"& .min-icon\": {\n        color: get(theme, \"fontColor\", \"#000\"),\n        width: 13,\n        marginRight: 5,\n      },\n    },\n    \"& .metricLabel\": {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      color: get(theme, \"fontColor\", \"#000\"),\n    },\n    \"& .metricText\": {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    \"& .unit\": {\n      fontSize: 12,\n      fontWeight: \"normal\",\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      marginTop: 8,\n      paddingTop: 8,\n    },\n  },\n}));\n\ninterface IBucketListItem {\n  bucket: Bucket;\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selected: boolean;\n  bulkSelect: boolean;\n}\n\nconst BucketListItem = ({\n  bucket,\n  onSelect,\n  selected,\n  bulkSelect,\n}: IBucketListItem) => {\n  const navigate = useNavigate();\n\n  const [clickOverride, setClickOverride] = useState<boolean>(false);\n\n  const usage = niceBytes(`${bucket.size}` || \"0\");\n  const usageScalar = usage.split(\" \")[0];\n  const usageUnit = usage.split(\" \")[1];\n\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\n  const quotaForString = calculateBytes(quota, true, false);\n\n  const manageAllowed =\n    hasPermission(bucket.name, IAM_PERMISSIONS[IAM_ROLES.BUCKET_ADMIN]) &&\n    false;\n\n  const accessToStr = (bucket: Bucket): string => {\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\n      return \"R\";\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"W\";\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"R/W\";\n    }\n    return \"\";\n  };\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSelect(e);\n  };\n\n  return (\n    <BucketItemMain\n      onClick={() => {\n        !clickOverride && navigate(`/buckets/${bucket.name}/admin`);\n      }}\n      id={`manageBucket-${bucket.name}`}\n      className={`bucket-item ${manageAllowed ? \"disabled\" : \"\"}`}\n    >\n      <Box className={\"bucketTitle\"}>\n        {bulkSelect && (\n          <Box\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <Checkbox\n              checked={selected}\n              id={`select-${bucket.name}`}\n              label={\"\"}\n              name={`select-${bucket.name}`}\n              onChange={onCheckboxClick}\n              value={bucket.name}\n            />\n          </Box>\n        )}\n        <h1>\n          {bucket.name} {manageAllowed}\n        </h1>\n      </Box>\n      <Box className={\"bucketDetails\"}>\n        <span id={`created-${bucket.name}`}>\n          <strong>Created:</strong>{\" \"}\n          {bucket.creation_date\n            ? new Date(bucket.creation_date).toString()\n            : \"n/a\"}\n        </span>\n        <span id={`access-${bucket.name}`}>\n          <strong>Access:</strong> {accessToStr(bucket)}\n        </span>\n      </Box>\n      <Box className={\"bucketMetrics\"}>\n        <Link to={`/buckets/${bucket.name}/admin`}>\n          <BucketsIcon\n            className={\"bucketIcon\"}\n            style={{\n              height: 48,\n              width: 48,\n            }}\n          />\n        </Link>\n\n        <Grid\n          item\n          className={\"metric\"}\n          onMouseEnter={() =>\n            bucket.details?.versioning && setClickOverride(true)\n          }\n          onMouseLeave={() =>\n            bucket.details?.versioning && setClickOverride(false)\n          }\n        >\n          {bucket.details?.versioning && (\n            <HelpTip content={usageClarifyingContent} placement=\"top\">\n              <ReportedUsageIcon />{\" \"}\n            </HelpTip>\n          )}\n          {!bucket.details?.versioning && <ReportedUsageIcon />}\n          <span className={\"metricLabel\"}>Usage</span>\n          <div className={\"metricText\"}>\n            {usageScalar}\n            <span className={\"unit\"}>{usageUnit}</span>\n            {quota !== \"0\" && (\n              <Fragment>\n                {\" \"}\n                / {quotaForString.total}\n                <span className={\"unit\"}>{quotaForString.unit}</span>\n              </Fragment>\n            )}\n          </div>\n        </Grid>\n\n        <Grid item className={\"metric\"}>\n          <TotalObjectsIcon />\n          <span className={\"metricLabel\"}>Objects</span>\n          <div className={\"metricText\"}>\n            {bucket.objects ? prettyNumber(bucket.objects) : 0}\n          </div>\n        </Grid>\n      </Box>\n    </BucketItemMain>\n  );\n};\n\nexport default BucketListItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  CheckCircleIcon,\n  FormLayout,\n  InputBox,\n  ReadBox,\n  Select,\n  Switch,\n  Tooltip,\n  WarnIcon,\n  Wizard,\n} from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { MultiBucketResponseItem } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { SelectorTypes } from \"../../../../common/types\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  buckets: string[];\n}\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [replicationMode, setReplicationMode] = useState<\"async\" | \"sync\">(\n    \"async\",\n  );\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\n  const [responseItem, setResponseItem] = useState<\n    MultiBucketResponseItem[] | undefined\n  >([]);\n\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\n    (remoteBucketName: string) => {\n      return {\n        label: remoteBucketName,\n        value: remoteBucketName,\n      };\n    },\n  );\n\n  useEffect(() => {\n    if (relationBuckets.length === 0) {\n      const bucketsAlter: string[] = [];\n      const relationBucketsAlter: string[] = [];\n\n      buckets.forEach((item: string) => {\n        bucketsAlter.push(item);\n        relationBucketsAlter.push(\"\");\n      });\n\n      setRelationBuckets(relationBucketsAlter);\n      setBucketsToAlter(bucketsAlter);\n    }\n  }, [buckets, relationBuckets.length]);\n\n  const addRecord = () => {\n    setAddLoading(true);\n    const replicate = bucketsToAlter.map((bucketName, index) => {\n      return {\n        originBucket: bucketName,\n        destinationBucket: relationBuckets[index],\n      };\n    });\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n    const hc = parseInt(healthCheck);\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n    };\n\n    api.bucketsReplication\n      .setMultiBucketReplication(remoteBucketsInfo)\n      .then((response) => {\n        setAddLoading(false);\n\n        const states = response.data.replicationState;\n        setResponseItem(states);\n\n        const filterErrors = states?.filter(\n          (itm) => itm.errorString && itm.errorString !== \"\",\n        );\n\n        if (filterErrors?.length === 0) {\n          closeModalAndRefresh(true);\n        } else {\n          setTimeout(() => {\n            removeSuccessItems(states);\n          }, 500);\n        }\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const retrieveRemoteBuckets = (\n    wizardPageJump: (page: number | string) => void,\n  ) => {\n    const remoteConnectInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: targetURL,\n      useTLS,\n    };\n    setExternalLoading(true);\n\n    api.listExternalBuckets\n      .listExternalBuckets(remoteConnectInfo)\n      .then((res) => {\n        const buckets = get(res.data, \"buckets\", []);\n\n        if (buckets && buckets.length > 0) {\n          const arrayReplaceBuckets = buckets.map((element: any) => {\n            return element.name;\n          });\n\n          setRemoteBucketOpts(arrayReplaceBuckets);\n        }\n\n        wizardPageJump(\"++\");\n        setExternalLoading(false);\n      })\n      .catch((err) => {\n        setExternalLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const stateOfItem = (initialBucket: string) => {\n    if (responseItem && responseItem.length > 0) {\n      const bucketResponse = responseItem.find(\n        (item) => item.originBucket === initialBucket,\n      );\n\n      if (bucketResponse) {\n        const errString = get(bucketResponse, \"errorString\", \"\");\n\n        if (errString) {\n          return errString;\n        }\n\n        return \"\";\n      }\n    }\n    return \"n/a\";\n  };\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <Box\n            sx={{\n              color: \"#42C91A\",\n            }}\n          >\n            <CheckCircleIcon />\n          </Box>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <Box\n              sx={{\n                color: \"#C72C48\",\n              }}\n            >\n              <Tooltip tooltip={errString} placement=\"top\">\n                <WarnIcon />\n              </Tooltip>\n            </Box>\n          );\n        }\n    }\n    return null;\n  };\n\n  const updateItem = (indexItem: number, value: string) => {\n    const updatedList = [...relationBuckets];\n    updatedList[indexItem] = value;\n    setRelationBuckets(updatedList);\n  };\n\n  const itemDisplayBulk = (indexItem: number) => {\n    if (remoteBucketsOpts.length > 0) {\n      return (\n        <Fragment>\n          <Select\n            label=\"\"\n            id={`assign-bucket-${indexItem}`}\n            name={`assign-bucket-${indexItem}`}\n            value={relationBuckets[indexItem]}\n            onChange={(value) => {\n              updateItem(indexItem, value);\n            }}\n            options={optionsForBucketsDrop}\n            disabled={addLoading}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        <InputBox\n          id={`assign-bucket-${indexItem}`}\n          name={`assign-bucket-${indexItem}`}\n          label=\"\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateItem(indexItem, event.target.value);\n          }}\n          value={relationBuckets[indexItem]}\n          disabled={addLoading}\n        />\n      </Fragment>\n    );\n  };\n\n  const removeSuccessItems = (\n    responseItem: MultiBucketResponseItem[] | undefined,\n  ) => {\n    let newBucketsToAlter = [...bucketsToAlter];\n    let newRelationBuckets = [...relationBuckets];\n\n    responseItem?.forEach((successElement) => {\n      const errorString = get(successElement, \"errorString\", \"\");\n\n      if (!errorString || errorString === \"\") {\n        const indexToRemove = newBucketsToAlter.indexOf(\n          successElement.originBucket || \"\",\n        );\n\n        newBucketsToAlter.splice(indexToRemove, 1);\n        newRelationBuckets.splice(indexToRemove, 1);\n      }\n    });\n\n    setBucketsToAlter(newBucketsToAlter);\n    setRelationBuckets(newRelationBuckets);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Multiple Bucket Replication\"\n    >\n      <Wizard\n        loadingStep={addLoading || externalLoading}\n        wizardSteps={[\n          {\n            label: \"Remote Configuration\",\n            componentRender: (\n              <Fragment>\n                <FormLayout containerPadding={false} withBorders={false}>\n                  <ReadBox\n                    label=\"Local Buckets to replicate\"\n                    sx={{ maxWidth: \"440px\", width: \"100%\" }}\n                  >\n                    {bucketsToAlter.join(\", \")}\n                  </ReadBox>\n                  <h4>Remote Endpoint Configuration</h4>\n                  <span style={{ fontSize: 14 }}>\n                    Please avoid the use of root credentials for this feature\n                    <br />\n                    <br />\n                  </span>\n                  <InputBox\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                    label=\"Access Key\"\n                    value={accessKey}\n                  />\n                  <InputBox\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    label=\"Secret Key\"\n                    value={secretKey}\n                  />\n                  <InputBox\n                    id=\"targetURL\"\n                    name=\"targetURL\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setTargetURL(e.target.value);\n                    }}\n                    placeholder=\"play.min.io:9000\"\n                    label=\"Target URL\"\n                    value={targetURL}\n                  />\n                  <Switch\n                    checked={useTLS}\n                    id=\"useTLS\"\n                    name=\"useTLS\"\n                    label=\"Use TLS\"\n                    onChange={(e) => {\n                      setUseTLS(e.target.checked);\n                    }}\n                    value=\"yes\"\n                  />\n                  <InputBox\n                    id=\"region\"\n                    name=\"region\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                    label=\"Region\"\n                    value={region}\n                  />\n                  <Select\n                    id=\"replication_mode\"\n                    name=\"replication_mode\"\n                    onChange={(value) => {\n                      setReplicationMode(value as \"sync\" | \"async\");\n                    }}\n                    label=\"Replication Mode\"\n                    value={replicationMode}\n                    options={[\n                      { label: \"Asynchronous\", value: \"async\" },\n                      { label: \"Synchronous\", value: \"sync\" },\n                    ]}\n                  />\n                  {replicationMode === \"async\" && (\n                    <InputBox\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setBandwidthScalar(e.target.value as string);\n                        }\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                      pattern={\"[0-9]*\"}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"quota_unit\"}\n                          onUnitChange={(newValue) => {\n                            setBandwidthUnit(newValue);\n                          }}\n                          unitSelected={bandwidthUnit}\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                          disabled={false}\n                        />\n                      }\n                    />\n                  )}\n                  <InputBox\n                    id=\"healthCheck\"\n                    name=\"healthCheck\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setHealthCheck(e.target.value as string);\n                    }}\n                    label=\"Health Check Duration\"\n                    value={healthCheck}\n                  />\n                </FormLayout>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Next\",\n                enabled: !externalLoading,\n                action: retrieveRemoteBuckets,\n              },\n            ],\n          },\n          {\n            label: \"Bucket Assignments\",\n            componentRender: (\n              <Fragment>\n                <h3>Remote Bucket Assignments</h3>\n                <span style={{ fontSize: 14 }}>\n                  Please select / type the desired remote bucket were you want\n                  the local data to be replicated.\n                </span>\n                <Box\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"auto auto 45px\",\n                    alignItems: \"center\",\n                    justifyContent: \"stretch\",\n                    \"& .hide\": {\n                      opacity: 0,\n                      transitionDuration: \"0.3s\",\n                    },\n                  }}\n                >\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\n                    const errorItem = stateOfItem(bucketName);\n                    return (\n                      <Fragment\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\n                      >\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {bucketName}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {itemDisplayBulk(index)}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {responseItem && responseItem.length > 0 && (\n                            <LogoToShow errString={errorItem} />\n                          )}\n                        </div>\n                      </Fragment>\n                    );\n                  })}\n                </Box>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"back\",\n                label: \"Back\",\n                enabled: true,\n              },\n              {\n                type: \"next\",\n                label: \"Create\",\n                enabled: !addLoading,\n                action: addRecord,\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default AddBulkReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  BucketsIcon,\n  Button,\n  HelpBox,\n  MultipleBucketsIcon,\n  PageLayout,\n  RefreshIcon,\n  SelectAllIcon,\n  SelectMultipleIcon,\n  Grid,\n  breakPoints,\n  ProgressBar,\n  ActionLink,\n} from \"mds\";\n\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n  permissionTooltipHelper,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { api } from \"../../../../api\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { errorToHandler } from \"../../../../api/errors\";\nimport HelpMenu from \"../../HelpMenu\";\nimport AutoColorIcon from \"../../Common/Components/AutoColorIcon\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\nimport BucketListItem from \"./BucketListItem\";\nimport BulkReplicationModal from \"./BulkReplicationModal\";\n\nconst ListBuckets = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [records, setRecords] = useState<Bucket[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\n  const [replicationModalOpen, setReplicationModalOpen] =\n    useState<boolean>(false);\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\n\n  const features = useSelector(selFeatures);\n  const obOnly = !!features?.includes(\"object-browser-only\");\n\n  useEffect(() => {\n    dispatch(setHelpName(\"ob_bucket_list\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (loading) {\n      const fetchRecords = () => {\n        setLoading(true);\n        api.buckets.listBuckets().then((res) => {\n          if (res.data) {\n            setLoading(false);\n            setRecords(res.data.buckets || []);\n          } else if (res.error) {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(errorToHandler(res.error)));\n          }\n        });\n      };\n      fetchRecords();\n    }\n  }, [loading, dispatch]);\n\n  const filteredRecords = records.filter((b: Bucket) => {\n    if (filterBuckets === \"\") {\n      return true;\n    } else {\n      return b.name.indexOf(filterBuckets) >= 0;\n    }\n  });\n\n  const hasBuckets = records.length > 0;\n\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedBucketsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedBuckets(elements);\n\n    return elements;\n  };\n\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\n    setReplicationModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const renderItemLine = (index: number) => {\n    const bucket = filteredRecords[index] || null;\n    if (bucket) {\n      return (\n        <BucketListItem\n          bucket={bucket}\n          onSelect={selectListBuckets}\n          selected={selectedBuckets.includes(bucket.name)}\n          bulkSelect={bulkSelect}\n        />\n      );\n    }\n    return null;\n  };\n\n  const selectAllBuckets = () => {\n    if (selectedBuckets.length === filteredRecords.length) {\n      setSelectedBuckets([]);\n      return;\n    }\n\n    const selectAllBuckets = filteredRecords.map((bucket) => {\n      return bucket.name;\n    });\n\n    setSelectedBuckets(selectAllBuckets);\n  };\n\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\n  const canListBuckets = hasPermission(\"*\", [\n    IAM_SCOPES.S3_LIST_BUCKET,\n    IAM_SCOPES.S3_ALL_LIST_BUCKET,\n  ]);\n\n  return (\n    <Fragment>\n      {replicationModalOpen && (\n        <BulkReplicationModal\n          open={replicationModalOpen}\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkReplicationModal}\n        />\n      )}\n      {!obOnly && (\n        <PageHeaderWrapper label={\"Buckets\"} actions={<HelpMenu />} />\n      )}\n\n      <PageLayout>\n        <Grid item xs={12} sx={actionsTray.actionsTray}>\n          {obOnly && (\n            <Grid item xs>\n              <AutoColorIcon marginRight={15} marginTop={10} />\n            </Grid>\n          )}\n          {hasBuckets && (\n            <SearchBox\n              onChange={setFilterBuckets}\n              placeholder=\"Search Buckets\"\n              value={filterBuckets}\n              sx={{\n                minWidth: 380,\n                [`@media (max-width: ${breakPoints.md}px)`]: {\n                  minWidth: 220,\n                },\n              }}\n            />\n          )}\n\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              gap: 5,\n            }}\n          >\n            {!obOnly && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : bulkSelect\n                        ? \"Unselect Buckets\"\n                        : \"Select Multiple Buckets\"\n                  }\n                >\n                  <Button\n                    id={\"multiple-bucket-seection\"}\n                    onClick={() => {\n                      setBulkSelect(!bulkSelect);\n                      setSelectedBuckets([]);\n                    }}\n                    icon={<SelectMultipleIcon />}\n                    variant={bulkSelect ? \"callAction\" : \"regular\"}\n                    disabled={!hasBuckets}\n                  />\n                </TooltipWrapper>\n\n                {bulkSelect && (\n                  <TooltipWrapper\n                    tooltip={\n                      !hasBuckets\n                        ? \"\"\n                        : selectedBuckets.length === filteredRecords.length\n                          ? \"Unselect All Buckets\"\n                          : \"Select All Buckets\"\n                    }\n                  >\n                    <Button\n                      id={\"select-all-buckets\"}\n                      onClick={selectAllBuckets}\n                      icon={<SelectAllIcon />}\n                      variant={\"regular\"}\n                    />\n                  </TooltipWrapper>\n                )}\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : selectedBuckets.length === 0\n                        ? bulkSelect\n                          ? \"Please select at least one bucket on which to configure Replication\"\n                          : \"Use the Select Multiple Buckets button to choose buckets on which to configure Replication\"\n                        : \"Set Replication\"\n                  }\n                >\n                  <Button\n                    id={\"set-replication\"}\n                    onClick={() => {\n                      setReplicationModalOpen(true);\n                    }}\n                    icon={<MultipleBucketsIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0}\n                  />\n                </TooltipWrapper>\n              </Fragment>\n            )}\n\n            <TooltipWrapper tooltip={\"Refresh\"}>\n              <Button\n                id={\"refresh-buckets\"}\n                onClick={() => {\n                  setLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n\n            {!obOnly && (\n              <TooltipWrapper\n                tooltip={\n                  canCreateBucket\n                    ? \"\"\n                    : permissionTooltipHelper(\n                        [IAM_SCOPES.S3_CREATE_BUCKET],\n                        \"create a bucket\",\n                      )\n                }\n              >\n                <Button\n                  id={\"create-bucket\"}\n                  onClick={() => {\n                    navigate(IAM_PAGES.ADD_BUCKETS);\n                  }}\n                  icon={<AddIcon />}\n                  variant={\"callAction\"}\n                  disabled={!canCreateBucket}\n                  label={\"Create Bucket\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        </Grid>\n\n        {loading && <ProgressBar />}\n        {!loading && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginTop: 25,\n              height: \"calc(100vh - 211px)\",\n              \"&.isEmbedded\": {\n                height: \"calc(100vh - 128px)\",\n              },\n            }}\n            className={obOnly ? \"isEmbedded\" : \"\"}\n          >\n            {filteredRecords.length !== 0 && (\n              <VirtualizedList\n                rowRenderFunction={renderItemLine}\n                totalItems={filteredRecords.length}\n              />\n            )}\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"No Results\"}\n                    help={\n                      <Fragment>\n                        No buckets match the filtering condition\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {!hasBuckets && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"Buckets\"}\n                    help={\n                      <Fragment>\n                        MinIO uses buckets to organize objects. A bucket is\n                        similar to a folder or directory in a filesystem, where\n                        each bucket can hold an arbitrary number of objects.\n                        <br />\n                        {canListBuckets ? (\n                          \"\"\n                        ) : (\n                          <Fragment>\n                            <br />\n                            {permissionTooltipHelper(\n                              [\n                                IAM_SCOPES.S3_LIST_BUCKET,\n                                IAM_SCOPES.S3_ALL_LIST_BUCKET,\n                              ],\n                              \"view the buckets on this server\",\n                            )}\n                            <br />\n                          </Fragment>\n                        )}\n                        <SecureComponent\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <br />\n                          To get started,&nbsp;\n                          <ActionLink\n                            onClick={() => {\n                              navigate(IAM_PAGES.ADD_BUCKETS);\n                            }}\n                          >\n                            Create a Bucket.\n                          </ActionLink>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ListBuckets;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n"],"names":["UnitMenuButton","styled","button","_ref","theme","border","concat","get","borderRadius","color","backgroundColor","fontSize","_ref2","id","unitSelected","unitsList","disabled","onUnitChange","anchorEl","setAnchorEl","React","open","Boolean","handleClose","newUnit","_jsxs","Fragment","children","_jsx","undefined","onClick","event","currentTarget","type","DropdownSelector","options","selectedOption","onSelect","value","hideTriggerAction","anchorOrigin","BucketItemMain","div","padding","cursor","display","alignItems","justifyContent","gap","margin","marginBottom","breakPoints","md","flexFlow","marginTop","borderTop","paddingTop","fill","width","marginRight","fontWeight","_bucket$details3","_bucket$details4","bucket","selected","bulkSelect","navigate","useNavigate","clickOverride","setClickOverride","useState","usage","niceBytes","size","usageScalar","split","usageUnit","quota","quotaForString","calculateBytes","manageAllowed","hasPermission","name","IAM_PERMISSIONS","IAM_ROLES","BUCKET_ADMIN","className","Box","e","stopPropagation","Checkbox","checked","label","onChange","creation_date","Date","toString","_bucket$rw_access","_bucket$rw_access2","_bucket$rw_access3","_bucket$rw_access4","_bucket$rw_access5","_bucket$rw_access6","rw_access","read","write","accessToStr","Link","to","BucketsIcon","style","height","Grid","item","onMouseEnter","_bucket$details","details","versioning","onMouseLeave","_bucket$details2","HelpTip","content","usageClarifyingContent","placement","ReportedUsageIcon","total","unit","TotalObjectsIcon","objects","prettyNumber","closeModalAndRefresh","buckets","dispatch","useAppDispatch","bucketsToAlter","setBucketsToAlter","addLoading","setAddLoading","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","map","remoteBucketName","useEffect","length","bucketsAlter","relationBucketsAlter","forEach","push","LogoToShow","errString","sx","CheckCircleIcon","Tooltip","tooltip","WarnIcon","updateItem","indexItem","updatedList","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","ModalWrapper","modalOpen","onClose","title","Wizard","loadingStep","wizardSteps","componentRender","FormLayout","containerPadding","withBorders","ReadBox","maxWidth","join","InputBox","target","placeholder","Switch","Select","validity","valid","min","pattern","overlayObject","InputUnitMenu","newValue","k8sScalarUnitsExcluding","buttons","enabled","action","wizardPageJump","remoteConnectInfo","api","listExternalBuckets","then","res","data","arrayReplaceBuckets","element","catch","err","setModalErrorSnackMessage","errorToHandler","error","gridTemplateColumns","opacity","transitionDuration","bucketName","index","errorItem","initialBucket","bucketResponse","find","stateOfItem","addRecord","replicate","destinationBucket","endURL","hc","parseInt","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","bucketsReplication","setMultiBucketReplication","response","states","replicationState","filterErrors","filter","itm","setTimeout","forModal","ListBuckets","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","setBulkSelect","features","useSelector","selFeatures","obOnly","includes","setHelpName","fetchRecords","listBuckets","setErrorSnackMessage","filteredRecords","b","hasBuckets","selectListBuckets","targetD","elements","canCreateBucket","IAM_SCOPES","S3_CREATE_BUCKET","canListBuckets","S3_LIST_BUCKET","S3_ALL_LIST_BUCKET","BulkReplicationModal","unselectAll","PageHeaderWrapper","actions","HelpMenu","PageLayout","xs","actionsTray","AutoColorIcon","SearchBox","minWidth","TooltipWrapper","Button","icon","SelectMultipleIcon","variant","selectAllBuckets","SelectAllIcon","MultipleBucketsIcon","RefreshIcon","permissionTooltipHelper","IAM_PAGES","ADD_BUCKETS","AddIcon","ProgressBar","VirtualizedList","rowRenderFunction","BucketListItem","totalItems","container","HelpBox","iconComponent","help","SecureComponent","scopes","resource","CONSOLE_UI_RESOURCE","ActionLink","wideLimit","titleIcon","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","detailedErrorMsg","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed"],"sourceRoot":""}