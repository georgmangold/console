{"version":3,"file":"static/js/7643.ef6e7e26.chunk.js","mappings":"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","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Buckets/BucketDetails/BucketDetails.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null,\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...(props as any)} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n  useParams,\n} from \"react-router-dom\";\nimport {\n  BackLink,\n  Box,\n  BucketsIcon,\n  Button,\n  FolderIcon,\n  PageLayout,\n  RefreshIcon,\n  ScreenTitle,\n  Tabs,\n  TrashIcon,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport {\n  browseBucketPermissions,\n  deleteBucketPermissions,\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n  IAM_SCOPES,\n  permissionTooltipHelper,\n} from \"../../../../common/SecureComponent/permissions\";\n\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\n\nimport withSuspense from \"../../Common/Components/withSuspense\";\nimport {\n  selDistSet,\n  selSiteRep,\n  setErrorSnackMessage,\n  setHelpName,\n} from \"../../../../systemSlice\";\nimport {\n  selBucketDetailsInfo,\n  selBucketDetailsLoading,\n  setBucketDetailsLoad,\n  setBucketInfo,\n} from \"./bucketDetailsSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst DeleteBucket = withSuspense(\n  React.lazy(() => import(\"../ListBuckets/DeleteBucket\")),\n);\nconst AccessRulePanel = withSuspense(\n  React.lazy(() => import(\"./AccessRulePanel\")),\n);\nconst AccessDetailsPanel = withSuspense(\n  React.lazy(() => import(\"./AccessDetailsPanel\")),\n);\nconst BucketSummaryPanel = withSuspense(\n  React.lazy(() => import(\"./BucketSummaryPanel\")),\n);\nconst BucketEventsPanel = withSuspense(\n  React.lazy(() => import(\"./BucketEventsPanel\")),\n);\nconst BucketReplicationPanel = withSuspense(\n  React.lazy(() => import(\"./BucketReplicationPanel\")),\n);\n\nconst BucketDetails = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n  const location = useLocation();\n\n  const distributedSetup = useSelector(selDistSet);\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const bucketInfo = useSelector(selBucketDetailsInfo);\n  const siteReplicationInfo = useSelector(selSiteRep);\n\n  const [iniLoad, setIniLoad] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const bucketName = params.bucketName || \"\";\n\n  const canDelete = hasPermission(bucketName, deleteBucketPermissions);\n  const canBrowse = hasPermission(bucketName, browseBucketPermissions);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_details\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!iniLoad) {\n      dispatch(setBucketDetailsLoad(true));\n      setIniLoad(true);\n    }\n  }, [iniLoad, dispatch, setIniLoad]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      api.buckets\n        .bucketInfo(bucketName)\n        .then((res) => {\n          dispatch(setBucketDetailsLoad(false));\n          dispatch(setBucketInfo(res.data));\n        })\n        .catch((err) => {\n          dispatch(setBucketDetailsLoad(false));\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  }, [bucketName, loadingBucket, dispatch]);\n\n  let topLevelRoute = `/buckets/${bucketName}`;\n  const defaultRoute = \"/admin/summary\";\n\n  const manageBucketRoutes: Record<string, any> = {\n    events: \"/admin/events\",\n    replication: \"/admin/replication\",\n    access: \"/admin/access\",\n    prefix: \"/admin/prefix\",\n  };\n\n  const getRoutePath = (routeKey: string) => {\n    let path = manageBucketRoutes[routeKey];\n    if (!path) {\n      path = `${topLevelRoute}${defaultRoute}`;\n    } else {\n      path = `${topLevelRoute}${path}`;\n    }\n    return path;\n  };\n\n  const closeDeleteModalAndRefresh = (refresh: boolean) => {\n    setDeleteOpen(false);\n    if (refresh) {\n      navigate(\"/buckets\");\n    }\n  };\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteBucket\n          deleteOpen={deleteOpen}\n          selectedBucket={bucketName}\n          closeDeleteModalAndRefresh={(refresh: boolean) => {\n            closeDeleteModalAndRefresh(refresh);\n          }}\n        />\n      )}\n      <PageHeaderWrapper\n        label={\n          <BackLink label={\"Buckets\"} onClick={() => navigate(\"/buckets\")} />\n        }\n        actions={\n          <Fragment>\n            <TooltipWrapper\n              tooltip={\n                canBrowse\n                  ? \"Browse Bucket\"\n                  : permissionTooltipHelper(\n                      IAM_PERMISSIONS[IAM_ROLES.BUCKET_VIEWER],\n                      \"browsing this bucket\",\n                    )\n              }\n            >\n              <Button\n                id={\"switch-browse-view\"}\n                aria-label=\"Browse Bucket\"\n                onClick={() => {\n                  navigate(`/browser/${bucketName}`);\n                }}\n                icon={\n                  <FolderIcon\n                    style={{ width: 20, height: 20, marginTop: -3 }}\n                  />\n                }\n                style={{\n                  padding: \"0 10px\",\n                }}\n                disabled={!canBrowse}\n              />\n            </TooltipWrapper>\n            <HelpMenu />\n          </Fragment>\n        }\n      />\n      <PageLayout>\n        <ScreenTitle\n          icon={\n            <Fragment>\n              <BucketsIcon width={40} />\n            </Fragment>\n          }\n          title={bucketName}\n          subTitle={\n            <SecureComponent\n              scopes={[\n                IAM_SCOPES.S3_GET_BUCKET_POLICY,\n                IAM_SCOPES.S3_GET_ACTIONS,\n              ]}\n              resource={bucketName}\n            >\n              <span style={{ fontSize: 15 }}>Access: </span>\n              <span\n                style={{\n                  fontWeight: 600,\n                  fontSize: 15,\n                  textTransform: \"capitalize\",\n                }}\n              >\n                {bucketInfo?.access?.toLowerCase()}\n              </span>\n            </SecureComponent>\n          }\n          actions={\n            <Fragment>\n              <SecureComponent\n                scopes={deleteBucketPermissions}\n                resource={bucketName}\n                errorProps={{ disabled: true }}\n              >\n                <TooltipWrapper\n                  tooltip={\n                    canDelete\n                      ? \"\"\n                      : permissionTooltipHelper(\n                          [\n                            IAM_SCOPES.S3_DELETE_BUCKET,\n                            IAM_SCOPES.S3_FORCE_DELETE_BUCKET,\n                          ],\n                          \"deleting this bucket\",\n                        )\n                  }\n                >\n                  <Button\n                    id={\"delete-bucket-button\"}\n                    onClick={() => {\n                      setDeleteOpen(true);\n                    }}\n                    label={\"Delete Bucket\"}\n                    icon={<TrashIcon />}\n                    variant={\"secondary\"}\n                    disabled={!canDelete}\n                  />\n                </TooltipWrapper>\n              </SecureComponent>\n              <Button\n                id={\"refresh-bucket-info\"}\n                onClick={() => {\n                  dispatch(setBucketDetailsLoad(true));\n                }}\n                label={\"Refresh\"}\n                icon={<RefreshIcon />}\n              />\n            </Fragment>\n          }\n          sx={{ marginBottom: 15 }}\n        />\n        <Box>\n          <Tabs\n            currentTabOrPath={location.pathname}\n            useRouteTabs\n            onTabClick={(tab) => {\n              navigate(tab);\n            }}\n            options={[\n              {\n                tabConfig: {\n                  label: \"Summary\",\n                  id: \"summary\",\n                  to: getRoutePath(\"summary\"),\n                },\n              },\n              {\n                tabConfig: {\n                  label: \"Events\",\n                  id: \"events\",\n                  disabled: !hasPermission(bucketName, [\n                    IAM_SCOPES.S3_GET_BUCKET_NOTIFICATIONS,\n                    IAM_SCOPES.S3_PUT_BUCKET_NOTIFICATIONS,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                    IAM_SCOPES.S3_PUT_ACTIONS,\n                  ]),\n                  to: getRoutePath(\"events\"),\n                },\n              },\n              {\n                tabConfig: {\n                  label: \"Replication\",\n                  id: \"replication\",\n                  disabled:\n                    !distributedSetup ||\n                    (siteReplicationInfo.enabled &&\n                      siteReplicationInfo.curSite) ||\n                    !hasPermission(bucketName, [\n                      IAM_SCOPES.S3_GET_REPLICATION_CONFIGURATION,\n                      IAM_SCOPES.S3_PUT_REPLICATION_CONFIGURATION,\n                      IAM_SCOPES.S3_GET_ACTIONS,\n                      IAM_SCOPES.S3_PUT_ACTIONS,\n                    ]),\n                  to: getRoutePath(\"replication\"),\n                },\n              },\n              {\n                tabConfig: {\n                  label: \"Access\",\n                  id: \"access\",\n                  disabled: !hasPermission(bucketName, [\n                    IAM_SCOPES.ADMIN_GET_POLICY,\n                    IAM_SCOPES.ADMIN_LIST_USER_POLICIES,\n                    IAM_SCOPES.ADMIN_LIST_USERS,\n                  ]),\n                  to: getRoutePath(\"access\"),\n                },\n              },\n              {\n                tabConfig: {\n                  label: \"Anonymous\",\n                  id: \"anonymous\",\n                  disabled: !hasPermission(bucketName, [\n                    IAM_SCOPES.S3_GET_BUCKET_POLICY,\n                    IAM_SCOPES.S3_GET_ACTIONS,\n                  ]),\n                  to: getRoutePath(\"prefix\"),\n                },\n              },\n            ]}\n            routes={\n              <Routes>\n                <Route path=\"summary\" element={<BucketSummaryPanel />} />\n                <Route path=\"events\" element={<BucketEventsPanel />} />\n                {distributedSetup && (\n                  <Route\n                    path=\"replication\"\n                    element={<BucketReplicationPanel />}\n                  />\n                )}\n                <Route path=\"access\" element={<AccessDetailsPanel />} />\n                <Route path=\"prefix\" element={<AccessRulePanel />} />\n                <Route\n                  path=\"*\"\n                  element={\n                    <Navigate to={`/buckets/${bucketName}/admin/summary`} />\n                  }\n                />\n              </Routes>\n            }\n          />\n        </Box>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default BucketDetails;\n"],"names":["WrappedComponent","fallback","arguments","length","undefined","props","_jsx","Suspense","children","_objectSpread","DeleteBucket","withSuspense","React","AccessRulePanel","AccessDetailsPanel","BucketSummaryPanel","BucketEventsPanel","BucketReplicationPanel","BucketDetails","_bucketInfo$access","dispatch","useAppDispatch","navigate","useNavigate","params","useParams","location","useLocation","distributedSetup","useSelector","selDistSet","loadingBucket","selBucketDetailsLoading","bucketInfo","selBucketDetailsInfo","siteReplicationInfo","selSiteRep","iniLoad","setIniLoad","useState","deleteOpen","setDeleteOpen","bucketName","canDelete","hasPermission","deleteBucketPermissions","canBrowse","browseBucketPermissions","useEffect","setHelpName","setBucketDetailsLoad","api","buckets","then","res","setBucketInfo","data","catch","err","setErrorSnackMessage","errorToHandler","topLevelRoute","concat","manageBucketRoutes","events","replication","access","prefix","getRoutePath","routeKey","path","_jsxs","Fragment","selectedBucket","closeDeleteModalAndRefresh","refresh","PageHeaderWrapper","label","BackLink","onClick","actions","TooltipWrapper","tooltip","permissionTooltipHelper","IAM_PERMISSIONS","IAM_ROLES","BUCKET_VIEWER","Button","id","icon","FolderIcon","style","width","height","marginTop","padding","disabled","HelpMenu","PageLayout","ScreenTitle","BucketsIcon","title","subTitle","SecureComponent","scopes","IAM_SCOPES","S3_GET_BUCKET_POLICY","S3_GET_ACTIONS","resource","fontSize","fontWeight","textTransform","toLowerCase","errorProps","S3_DELETE_BUCKET","S3_FORCE_DELETE_BUCKET","TrashIcon","variant","RefreshIcon","sx","marginBottom","Box","Tabs","currentTabOrPath","pathname","useRouteTabs","onTabClick","tab","options","tabConfig","to","S3_GET_BUCKET_NOTIFICATIONS","S3_PUT_BUCKET_NOTIFICATIONS","S3_PUT_ACTIONS","enabled","curSite","S3_GET_REPLICATION_CONFIGURATION","S3_PUT_REPLICATION_CONFIGURATION","ADMIN_GET_POLICY","ADMIN_LIST_USER_POLICIES","ADMIN_LIST_USERS","routes","Routes","Route","element","Navigate"],"sourceRoot":""}