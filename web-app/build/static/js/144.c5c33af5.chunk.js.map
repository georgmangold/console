{"version":3,"file":"static/js/144.c5c33af5.chunk.js","mappings":"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","sources":["utils/sortFunctions.ts","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Groups/AddGroupHelpBox.tsx","screens/Console/Groups/AddGroupScreen.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Policy, User } from \"api/consoleApi\";\n\ninterface policyDetailsInterface {\n  policy: string;\n}\n\nexport const usersSort = (a: User, b: User) => {\n  if (a.accessKey && b.accessKey) {\n    if (a.accessKey > b.accessKey) {\n      return 1;\n    }\n    if (a.accessKey < b.accessKey) {\n      return -1;\n    }\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: Policy, b: Policy) => {\n  if (a.name! > b.name!) {\n    return 1;\n  }\n  if (a.name! < b.name!) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policyDetailsSort = (\n  a: policyDetailsInterface,\n  b: policyDetailsInterface,\n) => {\n  if (a.policy > b.policy) {\n    return 1;\n  }\n  if (a.policy < b.policy) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState, Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { Box, DataTable, Grid, ProgressBar } from \"mds\";\n\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport { setModalErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n}\n\nconst UsersSelectors = ({\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n}: IGroupsProps) => {\n  const dispatch = useAppDispatch();\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api.users\n      .listUsers()\n      .then((res) => {\n        let users = get(res.data, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err) => {\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        isLoading(false);\n      });\n  }, [dispatch]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter),\n  );\n\n  return (\n    <Grid item xs={12} className={\"inputItem\"}>\n      <Box>\n        {loading && <ProgressBar />}\n        {records?.length > 0 ? (\n          <Fragment>\n            <Grid item xs={12} className={\"inputItem\"}>\n              <SearchBox\n                label={editMode ? \"Edit Members\" : \"Assign Users\"}\n                placeholder=\"Filter Users\"\n                onChange={setFilter}\n                value={filter}\n              />\n            </Grid>\n            <DataTable\n              columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n              onSelect={selectionChanged}\n              selectedItems={selUsers}\n              isLoading={loading}\n              records={filteredRecords}\n              entityName=\"Users\"\n              idField=\"accessKey\"\n              customPaperHeight={\"200px\"}\n            />\n          </Fragment>\n        ) : (\n          <Box\n            sx={{\n              textAlign: \"center\",\n              padding: \"10px 0\",\n            }}\n          >\n            No Users to display\n          </Box>\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default UsersSelectors;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\n\nimport { Box, GroupsIcon, HelpIconFilled, IAMPoliciesIcon } from \"mds\";\n\nconst FeatureItem = ({\n  icon,\n  description,\n}: {\n  icon: any;\n  description: string;\n}) => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        \"& .min-icon\": {\n          marginRight: \"10px\",\n          height: \"23px\",\n          width: \"23px\",\n          marginBottom: \"10px\",\n        },\n      }}\n    >\n      {icon}{\" \"}\n      <div style={{ fontSize: \"14px\", fontStyle: \"italic\", color: \"#5E5E5E\" }}>\n        {description}\n      </div>\n    </Box>\n  );\n};\nconst AddGroupHelpBox = () => {\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        border: \"1px solid #eaeaea\",\n        borderRadius: \"2px\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        padding: \"20px\",\n        marginTop: 0,\n      }}\n    >\n      <Box\n        sx={{\n          fontSize: \"16px\",\n          fontWeight: 600,\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n\n          \"& .min-icon\": {\n            height: \"21px\",\n            width: \"21px\",\n            marginRight: \"15px\",\n          },\n        }}\n      >\n        <HelpIconFilled />\n        <div>Learn more about Groups</div>\n      </Box>\n      <Box sx={{ fontSize: \"14px\", marginBottom: \"15px\" }}>\n        Adding groups lets you assign IAM policies to multiple users at once.\n        <Box sx={{ paddingTop: \"20px\", paddingBottom: \"10px\" }}>\n          Users inherit access permissions to data and resources through the\n          groups they belong to.\n        </Box>\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          A user can be a member of multiple groups.\n        </Box>\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          Groups provide a simplified method for managing shared permissions\n          among users with common access patterns and workloads. Client’s cannot\n          authenticate to a MinIO deployment using a group as an identity.\n        </Box>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexFlow: \"column\",\n        }}\n      >\n        <FeatureItem icon={<GroupsIcon />} description={`Add Users to Group`} />\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          Select from the list of displayed users to assign users to the new\n          group at creation. These users inherit the policies assigned to the\n          group.\n        </Box>\n        <FeatureItem\n          icon={<IAMPoliciesIcon />}\n          description={`Assign Custom IAM Policies for Group`}\n        />\n        <Box sx={{ paddingTop: \"10px\", paddingBottom: \"10px\" }}>\n          You can add policies to the group by selecting it from the Groups view\n          after creation. The Policy view lets you manage the assigned policies\n          for the group.\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddGroupHelpBox;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { modalStyleUtils } from \"../Common/FormComponents/common/styleLibrary\";\n\nimport {\n  BackLink,\n  Button,\n  CreateGroupIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  PageLayout,\n  ProgressBar,\n} from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport AddGroupHelpBox from \"./AddGroupHelpBox\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst AddGroupScreen = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const [groupName, setGroupName] = useState<string>(\"\");\n  const [saving, isSaving] = useState<boolean>(false);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [validGroup, setValidGroup] = useState<boolean>(false);\n\n  useEffect(() => {\n    setValidGroup(groupName.trim() !== \"\");\n  }, [groupName, selectedUsers]);\n\n  useEffect(() => {\n    if (saving) {\n      const saveRecord = () => {\n        api.groups\n          .addGroup({\n            group: groupName,\n            members: selectedUsers,\n          })\n          .then((res) => {\n            isSaving(false);\n            navigate(`${IAM_PAGES.GROUPS}`);\n          })\n          .catch((err) => {\n            isSaving(false);\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n      };\n\n      saveRecord();\n    }\n  }, [saving, groupName, selectedUsers, dispatch, navigate]);\n\n  //Fetch Actions\n  const setSaving = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    isSaving(true);\n  };\n\n  const resetForm = () => {\n    setGroupName(\"\");\n    setSelectedUsers([]);\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add_group\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper\n        label={\n          <BackLink\n            label={\"Groups\"}\n            onClick={() => navigate(IAM_PAGES.GROUPS)}\n          />\n        }\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <FormLayout\n          title={\"Create Group\"}\n          icon={<CreateGroupIcon />}\n          helpBox={<AddGroupHelpBox />}\n        >\n          <form noValidate autoComplete=\"off\" onSubmit={setSaving}>\n            <InputBox\n              id=\"group-name\"\n              name=\"group-name\"\n              label=\"Group Name\"\n              autoFocus={true}\n              value={groupName}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setGroupName(e.target.value);\n              }}\n            />\n            <UsersSelectors\n              selectedUsers={selectedUsers}\n              setSelectedUsers={setSelectedUsers}\n              editMode={true}\n            />\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"clear-group\"}\n                type=\"button\"\n                variant=\"regular\"\n                onClick={resetForm}\n                label={\"Clear\"}\n              />\n\n              <Button\n                id={\"save-group\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={saving || !validGroup}\n                label={\"Save\"}\n              />\n            </Grid>\n            {saving && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </form>\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default AddGroupScreen;\n"],"names":["usersSort","a","b","accessKey","policySort","name","stringSort","policyDetailsSort","policy","_ref","selectedUsers","setSelectedUsers","editMode","dispatch","useAppDispatch","records","setRecords","useState","loading","isLoading","filter","setFilter","fetchUsers","useCallback","api","users","listUsers","then","res","get","data","sort","catch","err","setModalErrorSnackMessage","errorToHandler","error","useEffect","selUsers","filteredRecords","elementItem","includes","_jsx","Grid","item","xs","className","children","_jsxs","Box","ProgressBar","length","Fragment","SearchBox","label","placeholder","onChange","value","DataTable","columns","elementKey","onSelect","e","targetD","target","checked","elements","push","element","selectedItems","entityName","idField","customPaperHeight","sx","textAlign","padding","FeatureItem","icon","description","display","marginRight","height","width","marginBottom","style","fontSize","fontStyle","color","AddGroupHelpBox","flex","border","borderRadius","flexFlow","marginTop","fontWeight","alignItems","HelpIconFilled","paddingTop","paddingBottom","GroupsIcon","IAMPoliciesIcon","AddGroupScreen","navigate","useNavigate","groupName","setGroupName","saving","isSaving","validGroup","setValidGroup","trim","saveRecord","groups","addGroup","group","members","concat","IAM_PAGES","GROUPS","setErrorSnackMessage","setHelpName","PageHeaderWrapper","BackLink","onClick","actions","HelpMenu","PageLayout","FormLayout","title","CreateGroupIcon","helpBox","noValidate","autoComplete","onSubmit","event","preventDefault","InputBox","id","autoFocus","UsersSelectors","modalStyleUtils","modalButtonBar","Button","type","variant","resetForm","disabled"],"sourceRoot":""}