{"version":3,"file":"static/js/2372.14a036b3.chunk.js","mappings":"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","sources":["screens/Console/Logs/LogSearch/utils.ts","screens/Console/Common/FormComponents/FilterInputWrapper/FilterInputWrapper.tsx","screens/Console/Logs/LogSearch/LogSearchFullModal.tsx","screens/Console/Common/MissingIntegration/MissingIntegration.tsx","screens/Console/Logs/LogSearch/LogsSearchMain.tsx","screens/Console/Common/FormComponents/DateRangeSelector/DateRangeSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const LogSearchColumnLabels = {\n  time: \"Timestamp\",\n  api_name: \"API Name\",\n  access_key: \"Access Key\",\n  bucket: \"Bucket\",\n  object: \"Object\",\n  remote_host: \"Remote Host\",\n  request_id: \"Request ID\",\n  user_agent: \"User Agent\",\n  response_status: \"Response Status\",\n  response_status_code: \"Response Status Code\",\n  request_content_length: \"Request Content Length\",\n  response_content_length: \"Response Content Length\",\n  time_to_response_ns: \"Time to Response NS\",\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { InputBox, InputLabel, Box } from \"mds\";\n\ninterface IFilterInputWrapper {\n  value: string;\n  onChange: (txtVar: string) => any;\n  label: string;\n  placeholder?: string;\n  id: string;\n  name: string;\n}\n\nconst FilterInputWrapper = ({\n  label,\n  onChange,\n  value,\n  placeholder = \"\",\n  id,\n  name,\n}: IFilterInputWrapper) => {\n  return (\n    <Fragment>\n      <Box\n        sx={{\n          flexGrow: 1,\n          margin: \"0 15px\",\n        }}\n      >\n        <InputLabel>{label}</InputLabel>\n        <InputBox\n          placeholder={placeholder}\n          id={id}\n          name={name}\n          label=\"\"\n          onChange={(val) => {\n            onChange(val.target.value);\n          }}\n          sx={{\n            \"& input\": {\n              height: 30,\n            },\n          }}\n          value={value}\n        />\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default FilterInputWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Button, Grid } from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { IReqInfoSearchResults } from \"./types\";\nimport { LogSearchColumnLabels } from \"./utils\";\n\ninterface ILogSearchFullModal {\n  modalOpen: boolean;\n  logSearchElement: IReqInfoSearchResults;\n  onClose: () => void;\n}\n\nconst LogSearchFullModal = ({\n  modalOpen,\n  logSearchElement,\n  onClose,\n}: ILogSearchFullModal) => {\n  const jsonItems = Object.keys(logSearchElement);\n\n  return (\n    <Fragment>\n      <ModalWrapper\n        modalOpen={modalOpen}\n        title=\"Full Log Information\"\n        onClose={() => {\n          onClose();\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12}>\n            <table>\n              <tbody>\n                {jsonItems.map((objectKey: string, index: number) => (\n                  <tr key={`logSearch-${index.toString()}`}>\n                    <th\n                      style={{\n                        fontWeight: 700,\n                        paddingRight: \"10px\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {get(LogSearchColumnLabels, objectKey, `${objectKey}`)}\n                    </th>\n                    <td>{get(logSearchElement, objectKey, \"\")}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <Button\n              id={\"close-log-search\"}\n              variant=\"callAction\"\n              color=\"primary\"\n              onClick={onClose}\n              label={\"Close\"}\n            />\n          </Grid>\n        </Grid>\n      </ModalWrapper>\n    </Fragment>\n  );\n};\n\nexport default LogSearchFullModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpBox, Grid } from \"mds\";\n\ninterface IMissingIntegration {\n  iconComponent: any;\n  entity: string;\n  documentationLink: string;\n}\n\nconst MissingIntegration = ({\n  iconComponent,\n  entity,\n  documentationLink,\n}: IMissingIntegration) => {\n  return (\n    <Grid\n      container\n      sx={{\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Grid item xs={8}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Fragment>\n              This feature is not available.\n              <br />\n              Please configure{\" \"}\n              <a href={documentationLink} target=\"_blank\" rel=\"noopener\">\n                {entity}\n              </a>{\" \"}\n              first to use this feature.\n            </Fragment>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MissingIntegration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { useSelector } from \"react-redux\";\nimport { CSSObject } from \"styled-components\";\nimport {\n  Box,\n  breakPoints,\n  Button,\n  DataTable,\n  ExpandOptionsButton,\n  Grid,\n  PageLayout,\n  SearchIcon,\n} from \"mds\";\nimport { DateTime } from \"luxon\";\nimport { IReqInfoSearchResults, ISearchResponse } from \"./types\";\nimport { niceBytes, nsToSeconds } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { LogSearchColumnLabels } from \"./utils\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport api from \"../../../../common/api\";\nimport FilterInputWrapper from \"../../Common/FormComponents/FilterInputWrapper/FilterInputWrapper\";\nimport LogSearchFullModal from \"./LogSearchFullModal\";\nimport DateRangeSelector from \"../../Common/FormComponents/DateRangeSelector/DateRangeSelector\";\nimport MissingIntegration from \"../../Common/MissingIntegration/MissingIntegration\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nconst filtersContainer: CSSObject = {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  marginBottom: 12,\n};\n\nconst LogsSearchMain = () => {\n  const dispatch = useAppDispatch();\n  const features = useSelector(selFeatures);\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [timeStart, setTimeStart] = useState<DateTime | null>(null);\n  const [timeEnd, setTimeEnd] = useState<DateTime | null>(null);\n  const [filterOpen, setFilterOpen] = useState<boolean>(false);\n  const [records, setRecords] = useState<IReqInfoSearchResults[]>([]);\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [apiName, setApiName] = useState<string>(\"\");\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [userAgent, setUserAgent] = useState<string>(\"\");\n  const [object, setObject] = useState<string>(\"\");\n  const [requestID, setRequestID] = useState<string>(\"\");\n  const [responseStatus, setResponseStatus] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\" | undefined>(\n    \"DESC\",\n  );\n  const [columnsShown, setColumnsShown] = useState<string[]>([\n    \"time\",\n    \"api_name\",\n    \"access_key\",\n    \"bucket\",\n    \"object\",\n    \"remote_host\",\n    \"request_id\",\n    \"user_agent\",\n    \"response_status\",\n  ]);\n  const [nextPage, setNextPage] = useState<number>(0);\n  const [alreadyFetching, setAlreadyFetching] = useState<boolean>(false);\n  const [logSearchExtrasOpen, setLogSearchExtrasOpen] =\n    useState<boolean>(false);\n  const [selectedItem, setSelectedItem] =\n    useState<IReqInfoSearchResults | null>(null);\n\n  let recordsResp: any = null;\n  const logSearchEnabled = features && features.includes(\"log-search\");\n\n  const fetchRecords = useCallback(() => {\n    if (!alreadyFetching && logSearchEnabled) {\n      setAlreadyFetching(true);\n      let queryParams = `${bucket !== \"\" ? `&fp=bucket:${bucket}` : \"\"}${\n        object !== \"\" ? `&fp=object:${object}` : \"\"\n      }${apiName !== \"\" ? `&fp=api_name:${apiName}` : \"\"}${\n        accessKey !== \"\" ? `&fp=access_key:${accessKey}` : \"\"\n      }${requestID !== \"\" ? `&fp=request_id:${requestID}` : \"\"}${\n        userAgent !== \"\" ? `&fp=user_agent:${userAgent}` : \"\"\n      }${responseStatus !== \"\" ? `&fp=response_status:${responseStatus}` : \"\"}`;\n\n      queryParams = queryParams.trim();\n\n      if (queryParams.endsWith(\",\")) {\n        queryParams = queryParams.slice(0, -1);\n      }\n\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/logs/search?q=reqinfo${\n            queryParams !== \"\" ? `${queryParams}` : \"\"\n          }&pageSize=100&pageNo=${nextPage}&order=${\n            sortOrder === \"DESC\" ? \"timeDesc\" : \"timeAsc\"\n          }${\n            timeStart !== null ? `&timeStart=${timeStart.toUTC().toISO()}` : \"\"\n          }${timeEnd !== null ? `&timeEnd=${timeEnd.toUTC().toISO()}` : \"\"}`,\n        )\n        .then((res: ISearchResponse) => {\n          const fetchedResults = res.results || [];\n\n          setLoading(false);\n          setAlreadyFetching(false);\n          setRecords(fetchedResults);\n          setNextPage(nextPage + 1);\n\n          if (recordsResp !== null) {\n            recordsResp();\n          }\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setAlreadyFetching(false);\n          dispatch(setErrorSnackMessage(err));\n        });\n    } else {\n      setLoading(false);\n      setAlreadyFetching(false);\n    }\n  }, [\n    alreadyFetching,\n    logSearchEnabled,\n    bucket,\n    object,\n    apiName,\n    accessKey,\n    requestID,\n    userAgent,\n    responseStatus,\n    nextPage,\n    sortOrder,\n    timeStart,\n    timeEnd,\n    recordsResp,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (loading) {\n      setRecords([]);\n      fetchRecords();\n    }\n  }, [loading, sortOrder, fetchRecords]);\n\n  const triggerLoad = () => {\n    setNextPage(0);\n    setLoading(true);\n  };\n\n  const selectColumn = (colID: string) => {\n    let newArray: string[];\n\n    const columnShown = columnsShown.findIndex((item) => item === colID);\n\n    // Column Exist, We remove from Array\n    if (columnShown >= 0) {\n      newArray = columnsShown.filter((element) => element !== colID);\n    } else {\n      // Column not visible, we include it in the array\n      newArray = [...columnsShown, colID];\n    }\n\n    setColumnsShown(newArray);\n  };\n\n  const sortChange = (sortData: any) => {\n    const newSortDirection = get(sortData, \"sortDirection\", \"DESC\");\n    setSortOrder(newSortDirection);\n    setNextPage(0);\n    setLoading(true);\n  };\n\n  const loadMoreRecords = (_: { startIndex: number; stopIndex: number }) => {\n    fetchRecords();\n    return new Promise((resolve) => {\n      recordsResp = resolve;\n    });\n  };\n\n  const openExtraInformation = (item: IReqInfoSearchResults) => {\n    setSelectedItem(item);\n    setLogSearchExtrasOpen(true);\n  };\n\n  const closeViewExtraInformation = () => {\n    setSelectedItem(null);\n    setLogSearchExtrasOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(setHelpName(\"audit_logs\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      {logSearchExtrasOpen && selectedItem !== null && (\n        <LogSearchFullModal\n          logSearchElement={selectedItem}\n          modalOpen={logSearchExtrasOpen}\n          onClose={closeViewExtraInformation}\n        />\n      )}\n\n      <PageHeaderWrapper label=\"Audit Logs\" actions={<HelpMenu />} />\n\n      <PageLayout>\n        {!logSearchEnabled ? (\n          <MissingIntegration\n            entity={\"Audit Logs\"}\n            iconComponent={<SearchIcon />}\n            documentationLink=\"https://min.io/docs/minio/windows/operations/monitoring/minio-logging.html?ref=con\"\n          />\n        ) : (\n          <Fragment>\n            {\" \"}\n            <Box withBorders sx={{ marginBottom: 15 }}>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: \"flex\",\n                  padding: 15,\n                  [`@media (max-width: ${breakPoints.lg}px)`]: {\n                    flexFlow: \"column\",\n                  },\n                }}\n              >\n                <Box>\n                  <DateRangeSelector\n                    setTimeEnd={(time) => setTimeEnd(time)}\n                    setTimeStart={(time) => setTimeStart(time)}\n                    timeEnd={timeEnd}\n                    timeStart={timeStart}\n                  />\n                </Box>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                  <ExpandOptionsButton\n                    label={`${filterOpen ? \"Hide\" : \"Show\"} advanced Filters`}\n                    open={filterOpen}\n                    onClick={() => {\n                      setFilterOpen(!filterOpen);\n                    }}\n                  />\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  display: filterOpen ? \"block\" : \"none\",\n                  overflowY: \"hidden\",\n                  marginBottom: filterOpen ? 12 : 0,\n                }}\n              >\n                <Box\n                  sx={{\n                    marginLeft: 15,\n                    marginBottom: 15,\n                    fontSize: 12,\n                    color: \"#9C9C9C\",\n                  }}\n                >\n                  Enable your preferred options to get filtered records.\n                  <br />\n                  You can use '*' to match any character, '.' to signify a\n                  single character or '\\' to scape an special character (E.g.\n                  mybucket-*)\n                </Box>\n                <Box sx={filtersContainer}>\n                  <FilterInputWrapper\n                    onChange={setBucket}\n                    value={bucket}\n                    label={\"Bucket\"}\n                    id=\"bucket\"\n                    name=\"bucket\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setApiName}\n                    value={apiName}\n                    label={\"API Name\"}\n                    id=\"api_name\"\n                    name=\"api_name\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setAccessKey}\n                    value={accessKey}\n                    label={\"Access Key\"}\n                    id=\"access_key\"\n                    name=\"access_key\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setUserAgent}\n                    value={userAgent}\n                    label={\"User Agent\"}\n                    id=\"user_agent\"\n                    name=\"user_agent\"\n                  />\n                </Box>\n                <Box sx={filtersContainer}>\n                  <FilterInputWrapper\n                    onChange={setObject}\n                    value={object}\n                    label={\"Object\"}\n                    id=\"object\"\n                    name=\"object\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setRequestID}\n                    value={requestID}\n                    label={\"Request ID\"}\n                    id=\"request_id\"\n                    name=\"request_id\"\n                  />\n                  <FilterInputWrapper\n                    onChange={setResponseStatus}\n                    value={responseStatus}\n                    label={\"Response Status\"}\n                    id=\"response_status\"\n                    name=\"response_status\"\n                  />\n                </Box>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sx={{\n                  marginBottom: 15,\n                  padding: \"0 15px 0 15px\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"flex-end\",\n                }}\n              >\n                <Button\n                  id={\"get-information\"}\n                  type=\"button\"\n                  variant=\"callAction\"\n                  onClick={triggerLoad}\n                  label={\"Get Information\"}\n                />\n              </Grid>\n            </Box>\n            <Grid item xs={12}>\n              <SecureComponent\n                scopes={[IAM_SCOPES.ADMIN_HEALTH_INFO]}\n                resource={CONSOLE_UI_RESOURCE}\n                errorProps={{ disabled: true }}\n              >\n                <DataTable\n                  columns={[\n                    {\n                      label: LogSearchColumnLabels.time,\n                      elementKey: \"time\",\n                      enableSort: true,\n                    },\n                    {\n                      label: LogSearchColumnLabels.api_name,\n                      elementKey: \"api_name\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.access_key,\n                      elementKey: \"access_key\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.bucket,\n                      elementKey: \"bucket\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.object,\n                      elementKey: \"object\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.remote_host,\n                      elementKey: \"remote_host\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.request_id,\n                      elementKey: \"request_id\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.user_agent,\n                      elementKey: \"user_agent\",\n                    },\n                    {\n                      label: LogSearchColumnLabels.response_status,\n                      elementKey: \"response_status\",\n                      renderFunction: (element) => (\n                        <Fragment>\n                          <span>\n                            {element.response_status_code} (\n                            {element.response_status})\n                          </span>\n                        </Fragment>\n                      ),\n                      renderFullObject: true,\n                    },\n                    {\n                      label: LogSearchColumnLabels.request_content_length,\n                      elementKey: \"request_content_length\",\n                      renderFunction: niceBytes,\n                    },\n                    {\n                      label: LogSearchColumnLabels.response_content_length,\n                      elementKey: \"response_content_length\",\n                      renderFunction: niceBytes,\n                    },\n                    {\n                      label: LogSearchColumnLabels.time_to_response_ns,\n                      elementKey: \"time_to_response_ns\",\n                      renderFunction: nsToSeconds,\n                      contentTextAlign: \"right\",\n                    },\n                  ]}\n                  isLoading={loading}\n                  records={records}\n                  entityName=\"Logs\"\n                  customEmptyMessage={\n                    \"There is no information with this criteria\"\n                  }\n                  idField=\"request_id\"\n                  columnsSelector\n                  columnsShown={columnsShown}\n                  onColumnChange={selectColumn}\n                  customPaperHeight={\n                    filterOpen ? \"calc(100vh - 520px)\" : \"calc(100vh - 320px)\"\n                  }\n                  sortEnabled={{\n                    currentSort: \"time\",\n                    currentDirection: sortOrder,\n                    onSortClick: sortChange,\n                  }}\n                  infiniteScrollConfig={{\n                    recordsCount: 1000000,\n                    loadMoreRecords: loadMoreRecords,\n                  }}\n                  itemActions={[\n                    {\n                      type: \"view\",\n                      onClick: openExtraInformation,\n                    },\n                  ]}\n                  textSelectable\n                />\n              </SecureComponent>\n            </Grid>\n          </Fragment>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default LogsSearchMain;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport {\n  Button,\n  SyncIcon,\n  Grid,\n  Box,\n  breakPoints,\n  TimeIcon,\n  DateTimeInput,\n} from \"mds\";\nimport { DateTime } from \"luxon\";\n\ninterface IDateRangeSelector {\n  timeStart: DateTime | null;\n  setTimeStart: (value: DateTime | null) => void;\n  timeEnd: DateTime | null;\n  setTimeEnd: (value: DateTime | null) => void;\n  triggerSync?: () => void;\n  label?: string;\n  startLabel?: string;\n  endLabel?: string;\n}\n\nconst DateRangeSelector = ({\n  timeStart,\n  setTimeStart,\n  timeEnd,\n  setTimeEnd,\n  triggerSync,\n  label = \"Filter:\",\n  startLabel = \"Start Time:\",\n  endLabel = \"End Time:\",\n}: IDateRangeSelector) => {\n  return (\n    <Grid\n      item\n      xs={12}\n      sx={{\n        \"& .filter-date-input-label, .end-time-input-label\": {\n          display: \"none\",\n        },\n        \"& .MuiInputBase-adornedEnd.filter-date-date-time-input\": {\n          width: \"100%\",\n          border: \"1px solid #eaeaea\",\n          paddingLeft: \"8px\",\n          paddingRight: \"8px\",\n          borderRadius: \"1px\",\n        },\n\n        \"& .MuiInputAdornment-root button\": {\n          height: \"20px\",\n          width: \"20px\",\n          marginRight: \"5px\",\n        },\n        \"& .filter-date-input-wrapper\": {\n          height: \"30px\",\n          width: \"100%\",\n\n          \"& .MuiTextField-root\": {\n            height: \"30px\",\n            width: \"90%\",\n\n            \"& input.Mui-disabled\": {\n              color: \"#000000\",\n              WebkitTextFillColor: \"#101010\",\n            },\n          },\n        },\n      }}\n    >\n      <Box\n        sx={{\n          display: \"grid\",\n          height: 40,\n          alignItems: \"center\",\n          gridTemplateColumns: \"auto 2fr auto\",\n          padding: 0,\n          [`@media (max-width: ${breakPoints.sm}px)`]: {\n            padding: 5,\n          },\n          [`@media (max-width: ${breakPoints.md}px)`]: {\n            gridTemplateColumns: \"1fr\",\n            height: \"auto\",\n          },\n          gap: \"5px\",\n        }}\n      >\n        <Box\n          sx={{ fontSize: \"14px\", fontWeight: 500, marginRight: \"5px\" }}\n          className={\"muted\"}\n        >\n          {label}\n        </Box>\n        <Box\n          customBorderPadding={\"0px\"}\n          sx={{\n            display: \"grid\",\n            height: 40,\n            alignItems: \"center\",\n            gridTemplateColumns: \"1fr 1fr\",\n            gap: \"8px\",\n            paddingLeft: \"8px\",\n            paddingRight: \"8px\",\n            [`@media (max-width: ${breakPoints.md}px)`]: {\n              height: \"auto\",\n              gridTemplateColumns: \"1fr\",\n            },\n          }}\n        >\n          <DateTimeInput\n            value={timeStart}\n            onChange={setTimeStart}\n            id=\"stTime\"\n            secondsSelector={false}\n            pickerStartComponent={\n              <Fragment>\n                <TimeIcon />\n                <span>{startLabel}</span>\n              </Fragment>\n            }\n          />\n          <DateTimeInput\n            value={timeEnd}\n            onChange={setTimeEnd}\n            id=\"endTime\"\n            secondsSelector={false}\n            pickerStartComponent={\n              <Fragment>\n                <TimeIcon />\n                <span>{endLabel}</span>\n              </Fragment>\n            }\n          />\n        </Box>\n\n        {triggerSync && (\n          <Box\n            sx={{\n              alignItems: \"flex-end\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            <Button\n              id={\"sync\"}\n              type=\"button\"\n              variant=\"callAction\"\n              onClick={triggerSync}\n              icon={<SyncIcon />}\n              label={\"Sync\"}\n            />\n          </Box>\n        )}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default DateRangeSelector;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n"],"names":["LogSearchColumnLabels","time","api_name","access_key","bucket","object","remote_host","request_id","user_agent","response_status","response_status_code","request_content_length","response_content_length","time_to_response_ns","_ref","label","onChange","value","placeholder","id","name","_jsx","Fragment","children","_jsxs","Box","sx","flexGrow","margin","InputLabel","InputBox","val","target","height","modalOpen","logSearchElement","onClose","jsonItems","Object","keys","ModalWrapper","title","Grid","container","item","xs","map","objectKey","index","style","fontWeight","paddingRight","textAlign","get","concat","toString","display","justifyContent","Button","variant","color","onClick","iconComponent","entity","documentationLink","alignContent","alignItems","HelpBox","help","href","rel","filtersContainer","marginBottom","LogsSearchMain","dispatch","useAppDispatch","features","useSelector","selFeatures","loading","setLoading","useState","timeStart","setTimeStart","timeEnd","setTimeEnd","filterOpen","setFilterOpen","records","setRecords","setBucket","apiName","setApiName","accessKey","setAccessKey","userAgent","setUserAgent","setObject","requestID","setRequestID","responseStatus","setResponseStatus","sortOrder","setSortOrder","columnsShown","setColumnsShown","nextPage","setNextPage","alreadyFetching","setAlreadyFetching","logSearchExtrasOpen","setLogSearchExtrasOpen","selectedItem","setSelectedItem","recordsResp","logSearchEnabled","includes","fetchRecords","useCallback","queryParams","trim","endsWith","slice","api","invoke","toUTC","toISO","then","res","fetchedResults","results","catch","err","setErrorSnackMessage","useEffect","setHelpName","LogSearchFullModal","closeViewExtraInformation","PageHeaderWrapper","actions","HelpMenu","PageLayout","withBorders","padding","breakPoints","lg","flexFlow","DateRangeSelector","ExpandOptionsButton","open","overflowY","marginLeft","fontSize","FilterInputWrapper","type","triggerLoad","SecureComponent","scopes","IAM_SCOPES","ADMIN_HEALTH_INFO","resource","CONSOLE_UI_RESOURCE","errorProps","disabled","DataTable","columns","elementKey","enableSort","renderFunction","element","renderFullObject","niceBytes","nsToSeconds","contentTextAlign","isLoading","entityName","customEmptyMessage","idField","columnsSelector","onColumnChange","colID","newArray","findIndex","filter","customPaperHeight","sortEnabled","currentSort","currentDirection","onSortClick","sortData","newSortDirection","infiniteScrollConfig","recordsCount","loadMoreRecords","_","Promise","resolve","itemActions","textSelectable","MissingIntegration","SearchIcon","triggerSync","startLabel","endLabel","width","border","paddingLeft","borderRadius","marginRight","WebkitTextFillColor","gridTemplateColumns","sm","md","gap","className","customBorderPadding","DateTimeInput","secondsSelector","pickerStartComponent","TimeIcon","icon","SyncIcon","wideLimit","titleIcon","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","detailedErrorMsg","length","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed"],"sourceRoot":""}